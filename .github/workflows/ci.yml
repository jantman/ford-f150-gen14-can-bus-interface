name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'platformio.ini'
      - 'src/**'
      - 'test/**'
      - 'include/**'
      - 'lib/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'platformio.ini'
      - 'src/**'
      - 'test/**'
      - 'include/**'
      - 'lib/**'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
          
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Install project dependencies
      run: |
        pio pkg install
        
    - name: Run native tests
      run: |
        echo "Running native tests..."
        pio test -e native -v
        
    - name: Build ESP32-S3 firmware
      run: |
        echo "Building ESP32-S3 firmware..."
        pio run -e esp32-s3-devkitc-1 -v
        
    - name: Check build artifacts
      run: |
        echo "Checking build artifacts..."
        ls -la .pio/build/esp32-s3-devkitc-1/
        
    - name: Generate build report
      run: |
        echo "=== Build Summary ===" >> $GITHUB_STEP_SUMMARY
        echo "- **Native Tests**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- **ESP32-S3 Build**: ✅ Success" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Statistics" >> $GITHUB_STEP_SUMMARY
        if [ -f .pio/build/esp32-s3-devkitc-1/firmware.bin ]; then
          FIRMWARE_SIZE=$(stat -c%s .pio/build/esp32-s3-devkitc-1/firmware.bin)
          echo "- **Firmware Size**: $(numfmt --to=iec-i --suffix=B $FIRMWARE_SIZE)" >> $GITHUB_STEP_SUMMARY
        fi
        echo "- **Build Environment**: ESP32-S3" >> $GITHUB_STEP_SUMMARY
        echo "- **Framework**: Arduino" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: esp32-s3-firmware
        path: |
          .pio/build/esp32-s3-devkitc-1/firmware.bin
          .pio/build/esp32-s3-devkitc-1/firmware.elf
        retention-days: 30

  test-coverage:
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        
    - name: Run tests with verbose output
      run: |
        echo "Running detailed test analysis..."
        pio test -e native -v > test_output.log 2>&1
        
    - name: Analyze test results
      run: |
        echo "=== Test Coverage Report ===" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count total tests
        if grep -q "PASSED" test_output.log; then
          PASSED_TESTS=$(grep -c "PASSED" test_output.log || echo "0")
          FAILED_TESTS=$(grep -c "FAILED" test_output.log || echo "0")
          TOTAL_TESTS=$((PASSED_TESTS + FAILED_TESTS))
          
          echo "- **Total Tests**: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- **Passed**: ✅ $PASSED_TESTS" >> $GITHUB_STEP_SUMMARY
          echo "- **Failed**: ❌ $FAILED_TESTS" >> $GITHUB_STEP_SUMMARY
          
          if [ $FAILED_TESTS -eq 0 ]; then
            echo "- **Status**: 🎉 All tests passing!" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ⚠️ Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "- **Status**: ⚠️ Could not parse test results" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Categories" >> $GITHUB_STEP_SUMMARY
        echo "- GPIO Controller Tests" >> $GITHUB_STEP_SUMMARY
        echo "- CAN Protocol Tests" >> $GITHUB_STEP_SUMMARY
        echo "- State Manager Tests" >> $GITHUB_STEP_SUMMARY  
        echo "- Integration Tests" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload test logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-logs
        path: test_output.log
        retention-days: 7
